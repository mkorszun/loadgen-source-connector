<ruleset name="quickstart">
  <description>Provider Data Mapper Rules</description>

  <rule ref="category/java/bestpractices.xml"/>
  <rule ref="category/java/multithreading.xml"/>
  <rule ref="category/java/performance.xml"/>
  <rule ref="category/java/errorprone.xml">
    <exclude name="BeanMembersShouldSerialize"/>
    <exclude name="MissingSerialVersionUID"/>
  </rule>

  <!-- Code Style -->
  <rule ref="category/java/codestyle.xml/FormalParameterNamingConventions"/>
  <rule ref="category/java/codestyle.xml/ClassNamingConventions"/>
  <rule ref="category/java/codestyle.xml/LocalVariableNamingConventions"/>
  <rule ref="category/java/codestyle.xml/MethodNamingConventions"/>
  <rule ref="category/java/codestyle.xml/PackageCase"/>
  <rule ref="category/java/codestyle.xml/GenericsNaming"/>
  <rule ref="category/java/codestyle.xml/ShortClassName"/>
  <rule ref="category/java/codestyle.xml/ShortMethodName"/>
  <rule ref="category/java/codestyle.xml/ControlStatementBraces"/>
  <rule ref="category/java/codestyle.xml/DontImportJavaLang"/>
  <rule ref="category/java/codestyle.xml/DuplicateImports"/>
  <rule ref="category/java/codestyle.xml/ExtendsObject"/>
  <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop"/>
  <rule ref="category/java/codestyle.xml/IdenticalCatchBranches"/>
  <rule ref="category/java/codestyle.xml/NoPackage"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryAnnotationValueElement"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryConstructor"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryModifier"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryReturn"/>
  <rule ref="category/java/codestyle.xml/UselessParentheses"/>
  <rule ref="category/java/codestyle.xml/UselessQualifiedThis"/>
  <!--  <rule ref="category/java/codestyle.xml/ShortVariable"/>-->

  <!-- Design -->
  <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod"/>
  <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
  <rule ref="category/java/design.xml/CouplingBetweenObjects"/>
  <rule ref="category/java/design.xml/ExcessiveMethodLength"/>
  <rule ref="category/java/design.xml/ExcessiveParameterList"/>
  <rule ref="category/java/design.xml/ExcessivePublicCount"/>
  <rule ref="category/java/design.xml/FinalFieldCouldBeStatic"/>
  <!--  <rule ref="category/java/design.xml/LawOfDemeter"/>-->
  <rule ref="category/java/design.xml/LogicInversion"/>
  <rule ref="category/java/design.xml/CyclomaticComplexity"/>
  <rule ref="category/java/design.xml/NPathComplexity"/>
  <rule ref="category/java/design.xml/SimplifiedTernary"/>
  <rule ref="category/java/design.xml/SimplifyBooleanReturns"/>
  <rule ref="category/java/design.xml/SimplifyConditional"/>
  <rule ref="category/java/design.xml/SingularField"/>
  <rule ref="category/java/design.xml/TooManyFields"/>
  <rule ref="category/java/design.xml/TooManyMethods">
    <properties>
      <property name="maxmethods" value="15" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/UselessOverridingMethod"/>
  <rule ref="category/java/design.xml/UseUtilityClass"/>
</ruleset>
